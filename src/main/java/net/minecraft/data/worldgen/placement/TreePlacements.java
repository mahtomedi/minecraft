package net.minecraft.data.worldgen.placement;

import java.util.List;
import net.minecraft.core.Direction;
import net.minecraft.core.Holder;
import net.minecraft.core.HolderGetter;
import net.minecraft.core.Registry;
import net.minecraft.data.worldgen.BootstapContext;
import net.minecraft.data.worldgen.features.TreeFeatures;
import net.minecraft.resources.ResourceKey;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.placement.BiomeFilter;
import net.minecraft.world.level.levelgen.placement.BlockPredicateFilter;
import net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement;
import net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement;
import net.minecraft.world.level.levelgen.placement.PlacedFeature;
import net.minecraft.world.level.levelgen.placement.PlacementModifier;

public class TreePlacements {
    public static final ResourceKey<PlacedFeature> CRIMSON_FUNGI = PlacementUtils.createKey("crimson_fungi");
    public static final ResourceKey<PlacedFeature> WARPED_FUNGI = PlacementUtils.createKey("warped_fungi");
    public static final ResourceKey<PlacedFeature> OAK_CHECKED = PlacementUtils.createKey("oak_checked");
    public static final ResourceKey<PlacedFeature> DARK_OAK_CHECKED = PlacementUtils.createKey("dark_oak_checked");
    public static final ResourceKey<PlacedFeature> BIRCH_CHECKED = PlacementUtils.createKey("birch_checked");
    public static final ResourceKey<PlacedFeature> ACACIA_CHECKED = PlacementUtils.createKey("acacia_checked");
    public static final ResourceKey<PlacedFeature> SPRUCE_CHECKED = PlacementUtils.createKey("spruce_checked");
    public static final ResourceKey<PlacedFeature> MANGROVE_CHECKED = PlacementUtils.createKey("mangrove_checked");
    public static final ResourceKey<PlacedFeature> PINE_ON_SNOW = PlacementUtils.createKey("pine_on_snow");
    public static final ResourceKey<PlacedFeature> SPRUCE_ON_SNOW = PlacementUtils.createKey("spruce_on_snow");
    public static final ResourceKey<PlacedFeature> PINE_CHECKED = PlacementUtils.createKey("pine_checked");
    public static final ResourceKey<PlacedFeature> JUNGLE_TREE_CHECKED = PlacementUtils.createKey("jungle_tree");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_CHECKED = PlacementUtils.createKey("fancy_oak_checked");
    public static final ResourceKey<PlacedFeature> MEGA_JUNGLE_TREE_CHECKED = PlacementUtils.createKey("mega_jungle_tree_checked");
    public static final ResourceKey<PlacedFeature> MEGA_SPRUCE_CHECKED = PlacementUtils.createKey("mega_spruce_checked");
    public static final ResourceKey<PlacedFeature> MEGA_PINE_CHECKED = PlacementUtils.createKey("mega_pine_checked");
    public static final ResourceKey<PlacedFeature> TALL_MANGROVE_CHECKED = PlacementUtils.createKey("tall_mangrove_checked");
    public static final ResourceKey<PlacedFeature> JUNGLE_BUSH = PlacementUtils.createKey("jungle_bush");
    public static final ResourceKey<PlacedFeature> SUPER_BIRCH_BEES_0002 = PlacementUtils.createKey("super_birch_bees_0002");
    public static final ResourceKey<PlacedFeature> SUPER_BIRCH_BEES = PlacementUtils.createKey("super_birch_bees");
    public static final ResourceKey<PlacedFeature> OAK_BEES_0002 = PlacementUtils.createKey("oak_bees_0002");
    public static final ResourceKey<PlacedFeature> OAK_BEES_002 = PlacementUtils.createKey("oak_bees_002");
    public static final ResourceKey<PlacedFeature> BIRCH_BEES_0002_PLACED = PlacementUtils.createKey("birch_bees_0002");
    public static final ResourceKey<PlacedFeature> BIRCH_BEES_002 = PlacementUtils.createKey("birch_bees_002");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_BEES_0002 = PlacementUtils.createKey("fancy_oak_bees_0002");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_BEES_002 = PlacementUtils.createKey("fancy_oak_bees_002");
    public static final ResourceKey<PlacedFeature> FANCY_OAK_BEES = PlacementUtils.createKey("fancy_oak_bees");

    public static void bootstrap(BootstapContext<PlacedFeature> param0) {
        HolderGetter<ConfiguredFeature<?, ?>> var0 = param0.lookup(Registry.CONFIGURED_FEATURE_REGISTRY);
        Holder<ConfiguredFeature<?, ?>> var1 = var0.getOrThrow(TreeFeatures.CRIMSON_FUNGUS);
        Holder<ConfiguredFeature<?, ?>> var2 = var0.getOrThrow(TreeFeatures.WARPED_FUNGUS);
        Holder<ConfiguredFeature<?, ?>> var3 = var0.getOrThrow(TreeFeatures.OAK);
        Holder<ConfiguredFeature<?, ?>> var4 = var0.getOrThrow(TreeFeatures.DARK_OAK);
        Holder<ConfiguredFeature<?, ?>> var5 = var0.getOrThrow(TreeFeatures.BIRCH);
        Holder<ConfiguredFeature<?, ?>> var6 = var0.getOrThrow(TreeFeatures.ACACIA);
        Holder<ConfiguredFeature<?, ?>> var7 = var0.getOrThrow(TreeFeatures.SPRUCE);
        Holder<ConfiguredFeature<?, ?>> var8 = var0.getOrThrow(TreeFeatures.MANGROVE);
        Holder<ConfiguredFeature<?, ?>> var9 = var0.getOrThrow(TreeFeatures.PINE);
        Holder<ConfiguredFeature<?, ?>> var10 = var0.getOrThrow(TreeFeatures.JUNGLE_TREE);
        Holder<ConfiguredFeature<?, ?>> var11 = var0.getOrThrow(TreeFeatures.FANCY_OAK);
        Holder<ConfiguredFeature<?, ?>> var12 = var0.getOrThrow(TreeFeatures.MEGA_JUNGLE_TREE);
        Holder<ConfiguredFeature<?, ?>> var13 = var0.getOrThrow(TreeFeatures.MEGA_SPRUCE);
        Holder<ConfiguredFeature<?, ?>> var14 = var0.getOrThrow(TreeFeatures.MEGA_PINE);
        Holder<ConfiguredFeature<?, ?>> var15 = var0.getOrThrow(TreeFeatures.TALL_MANGROVE);
        Holder<ConfiguredFeature<?, ?>> var16 = var0.getOrThrow(TreeFeatures.JUNGLE_BUSH);
        Holder<ConfiguredFeature<?, ?>> var17 = var0.getOrThrow(TreeFeatures.SUPER_BIRCH_BEES_0002);
        Holder<ConfiguredFeature<?, ?>> var18 = var0.getOrThrow(TreeFeatures.SUPER_BIRCH_BEES);
        Holder<ConfiguredFeature<?, ?>> var19 = var0.getOrThrow(TreeFeatures.OAK_BEES_0002);
        Holder<ConfiguredFeature<?, ?>> var20 = var0.getOrThrow(TreeFeatures.OAK_BEES_002);
        Holder<ConfiguredFeature<?, ?>> var21 = var0.getOrThrow(TreeFeatures.BIRCH_BEES_0002);
        Holder<ConfiguredFeature<?, ?>> var22 = var0.getOrThrow(TreeFeatures.BIRCH_BEES_002);
        Holder<ConfiguredFeature<?, ?>> var23 = var0.getOrThrow(TreeFeatures.FANCY_OAK_BEES_0002);
        Holder<ConfiguredFeature<?, ?>> var24 = var0.getOrThrow(TreeFeatures.FANCY_OAK_BEES_002);
        Holder<ConfiguredFeature<?, ?>> var25 = var0.getOrThrow(TreeFeatures.FANCY_OAK_BEES);
        PlacementUtils.register(param0, CRIMSON_FUNGI, var1, CountOnEveryLayerPlacement.of(8), BiomeFilter.biome());
        PlacementUtils.register(param0, WARPED_FUNGI, var2, CountOnEveryLayerPlacement.of(8), BiomeFilter.biome());
        PlacementUtils.register(param0, OAK_CHECKED, var3, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, DARK_OAK_CHECKED, var4, PlacementUtils.filteredByBlockSurvival(Blocks.DARK_OAK_SAPLING));
        PlacementUtils.register(param0, BIRCH_CHECKED, var5, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(param0, ACACIA_CHECKED, var6, PlacementUtils.filteredByBlockSurvival(Blocks.ACACIA_SAPLING));
        PlacementUtils.register(param0, SPRUCE_CHECKED, var7, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(param0, MANGROVE_CHECKED, var8, PlacementUtils.filteredByBlockSurvival(Blocks.MANGROVE_PROPAGULE));
        BlockPredicate var26 = BlockPredicate.matchesBlocks(Direction.DOWN.getNormal(), Blocks.SNOW_BLOCK, Blocks.POWDER_SNOW);
        List<PlacementModifier> var27 = List.of(
            EnvironmentScanPlacement.scanningFor(Direction.UP, BlockPredicate.not(BlockPredicate.matchesBlocks(Blocks.POWDER_SNOW)), 8),
            BlockPredicateFilter.forPredicate(var26)
        );
        PlacementUtils.register(param0, PINE_ON_SNOW, var9, var27);
        PlacementUtils.register(param0, SPRUCE_ON_SNOW, var7, var27);
        PlacementUtils.register(param0, PINE_CHECKED, var9, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(param0, JUNGLE_TREE_CHECKED, var10, PlacementUtils.filteredByBlockSurvival(Blocks.JUNGLE_SAPLING));
        PlacementUtils.register(param0, FANCY_OAK_CHECKED, var11, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, MEGA_JUNGLE_TREE_CHECKED, var12, PlacementUtils.filteredByBlockSurvival(Blocks.JUNGLE_SAPLING));
        PlacementUtils.register(param0, MEGA_SPRUCE_CHECKED, var13, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(param0, MEGA_PINE_CHECKED, var14, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING));
        PlacementUtils.register(param0, TALL_MANGROVE_CHECKED, var15, PlacementUtils.filteredByBlockSurvival(Blocks.MANGROVE_PROPAGULE));
        PlacementUtils.register(param0, JUNGLE_BUSH, var16, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, SUPER_BIRCH_BEES_0002, var17, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(param0, SUPER_BIRCH_BEES, var18, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(param0, OAK_BEES_0002, var19, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, OAK_BEES_002, var20, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, BIRCH_BEES_0002_PLACED, var21, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(param0, BIRCH_BEES_002, var22, PlacementUtils.filteredByBlockSurvival(Blocks.BIRCH_SAPLING));
        PlacementUtils.register(param0, FANCY_OAK_BEES_0002, var23, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, FANCY_OAK_BEES_002, var24, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
        PlacementUtils.register(param0, FANCY_OAK_BEES, var25, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING));
    }
}
